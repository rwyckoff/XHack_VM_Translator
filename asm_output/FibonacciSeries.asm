// Bootstrapping ASM file...
@256
D=A
@SP
M=D
// Push from argument
@1
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop to pointer
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@4
M=D
// Push from constant
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to that
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@0
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from constant
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to that
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@1
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from argument
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
// Pop to argument
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
(FibonacciSeries$MAIN_LOOP_START)
// Push from argument
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// if-goto
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@FibonacciSeries$COMPUTE_ELEMENT
D;JNE
// goto
@FibonacciSeries$END_PROGRAM
0;JMP
(FibonacciSeries$COMPUTE_ELEMENT)
// Push from that
@0
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from that
@1
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Pop to that
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@2
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from pointer
@4
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Pop to pointer
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@4
M=D
// Push from argument
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
// Pop to argument
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// goto
@FibonacciSeries$MAIN_LOOP_START
0;JMP
(FibonacciSeries$END_PROGRAM)
