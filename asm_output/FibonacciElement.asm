// Bootstrapping ASM file...
@256
D=A
@SP
M=D
// Call Sys.init
@Sys.initRETURN1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@LCL
M=D
@Sys.init
0;JMP
(Sys.initRETURN1)
// Defining function Main.fibonacci...
(Main.fibonacci)
D=0
// Push from argument
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@TRUE0
D;JLT
D=0
@END0
0;JMP
(TRUE0)
D=-1
(END0)
@SP
A=M
M=D
@SP
M=M+1
// if-goto
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@Main$IF_TRUE
D;JNE
// goto
@Main$IF_FALSE
0;JMP
(Main$IF_TRUE)
// Push from argument
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Returning...
@LCL
D=M
@R14
M=D
@5
D=A
@R14
A=M
A=A-D
D=M
@R13
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@1
D=A
@R14
A=M
A=A-D
D=M
@THAT
M=D
@2
D=A
@R14
A=M
A=A-D
D=M
@THIS
M=D
@3
D=A
@R14
A=M
A=A-D
D=M
@ARG
M=D
@4
D=A
@R14
A=M
A=A-D
D=M
@LCL
M=D
@R13
A=M
0;JMP
(Main$IF_FALSE)
// Push from argument
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
// Call Main.fibonacci
@Main.fibonacciRETURN2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacciRETURN2)
// Push from argument
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
// Call Main.fibonacci
@Main.fibonacciRETURN3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacciRETURN3)
// add
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Returning...
@LCL
D=M
@R14
M=D
@5
D=A
@R14
A=M
A=A-D
D=M
@R13
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@1
D=A
@R14
A=M
A=A-D
D=M
@THAT
M=D
@2
D=A
@R14
A=M
A=A-D
D=M
@THIS
M=D
@3
D=A
@R14
A=M
A=A-D
D=M
@ARG
M=D
@4
D=A
@R14
A=M
A=A-D
D=M
@LCL
M=D
@R13
A=M
0;JMP
// Defining function Sys.init...
(Sys.init)
D=0
// Push from constant
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
// Call Main.fibonacci
@Main.fibonacciRETURN4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@LCL
M=D
@Main.fibonacci
0;JMP
(Main.fibonacciRETURN4)
(Sys$WHILE)
// goto
@Sys$WHILE
0;JMP
