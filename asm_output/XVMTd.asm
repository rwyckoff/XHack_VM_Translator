// Bootstrapping ASM file...
@256
D=A
@SP
M=D
// Call Sys.init
@Sys.initRETURN1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@LCL
M=D
@Sys.init
0;JMP
(Sys.initRETURN1)
// Defining function Sys.init...
(Sys.init)
D=0
// Push from constant
@3000
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to static
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@Sys.42
M=D
// Push from static
@Sys.42
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
// Pop to pointer
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@4
M=D
// Push from constant
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to that
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@0
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from that
@0
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop to that
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@1
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Call Sys.output
@Sys.outputRETURN2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@LCL
M=D
@Sys.output
0;JMP
(Sys.outputRETURN2)
// Pop to temp
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@5
M=D
// Push from static
@Sys.42
D=M
@SP
A=M
M=D
@SP
M=M+1
// Call Test.test
@Test.testRETURN3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@LCL
M=D
@Test.test
0;JMP
(Test.testRETURN3)
// Pop to that
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@2
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Call Sys.output
@Sys.outputRETURN4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@LCL
M=D
@Sys.output
0;JMP
(Sys.outputRETURN4)
// Pop to temp
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@5
M=D
(Sys$TRAP)
// goto
@Sys$TRAP
0;JMP
// Push from temp
@5
D=M
@SP
A=M
M=D
@SP
M=M+1
// Returning...
@LCL
D=M
@R14
M=D
@5
D=A
@R14
A=M
A=A-D
D=M
@R13
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@1
D=A
@R14
A=M
A=A-D
D=M
@THAT
M=D
@2
D=A
@R14
A=M
A=A-D
D=M
@THIS
M=D
@3
D=A
@R14
A=M
A=A-D
D=M
@ARG
M=D
@4
D=A
@R14
A=M
A=A-D
D=M
@LCL
M=D
@R13
A=M
0;JMP
// Defining function Sys.output...
(Sys.output)
D=0
// Push from static
@Sys.42
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
// Pop to pointer
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@4
M=D
// Push from that
@0
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Pop to that
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@0
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from that
@1
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Pop to that
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@1
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from that
@0
D=A
@THAT
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Returning...
@LCL
D=M
@R14
M=D
@5
D=A
@R14
A=M
A=A-D
D=M
@R13
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@1
D=A
@R14
A=M
A=A-D
D=M
@THAT
M=D
@2
D=A
@R14
A=M
A=A-D
D=M
@THIS
M=D
@3
D=A
@R14
A=M
A=A-D
D=M
@ARG
M=D
@4
D=A
@R14
A=M
A=A-D
D=M
@LCL
M=D
@R13
A=M
0;JMP
// Defining function Test.test...
(Test.test)
D=0
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
M=D
@SP
M=M+1
// Push from constant
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to static
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@Test.42
M=D
// Push from constant
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to local
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@1
D=A
@LCL
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from argument
@0
D=A
@ARG
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Pop to pointer
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@3
M=D
// Push from constant
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to this
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@1
D=A
@THIS
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from constant
@255
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to this
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@2
D=A
@THIS
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from constant
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to this
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@3
D=A
@THIS
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from constant
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to this
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@4
D=A
@THIS
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from constant
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to this
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@5
D=A
@THIS
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from constant
@127
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to this
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@6
D=A
@THIS
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from constant
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to this
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@7
D=A
@THIS
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from constant
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// Pop to this
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@8
D=A
@THIS
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Call Sys.output
@Sys.outputRETURN5
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D-M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
M=D
@SP
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@LCL
M=D
@Sys.output
0;JMP
(Sys.outputRETURN5)
// Pop to local
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@0
D=A
@LCL
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from static
@Test.42
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from local
@1
D=A
@LCL
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
D=D+M
@SP
A=M
M=D
@SP
M=M+1
// Pop to local
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@R14
M=D
@1
D=A
@LCL
A=M
D=D+A
@R13
M=D
@R14
D=M
@R13
A=M
M=D
// Push from local
@1
D=A
@LCL
A=M
D=D+A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Returning...
@LCL
D=M
@R14
M=D
@5
D=A
@R14
A=M
A=A-D
D=M
@R13
M=D
@SP
A=M
A=A-1
D=M
@SP
M=M-1
@ARG
A=M
M=D
@ARG
D=M
D=D+1
@SP
M=D
@1
D=A
@R14
A=M
A=A-D
D=M
@THAT
M=D
@2
D=A
@R14
A=M
A=A-D
D=M
@THIS
M=D
@3
D=A
@R14
A=M
A=A-D
D=M
@ARG
M=D
@4
D=A
@R14
A=M
A=A-D
D=M
@LCL
M=D
@R13
A=M
0;JMP
